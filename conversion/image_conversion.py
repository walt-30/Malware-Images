#https://github.com/hugom1997/Malware_Classification/blob/master/Malware_Classification.ipynb
#https://github.com/RezaPurut/convert_malware_bytes_to_img/blob/master/conv_to_img.py

import os
from math import log
import numpy as np
from PIL import Image
import matplotlib.pyplot as plt
from conversion_data import *

bytes = os.listdir(BYTES_DIR)

## This function allows us to process our hexadecimal files into png images
def convert_and_save(array, name):
    print('processing ' + name)
    if array.shape[1]!=16: #If not hexadecimal
        assert(False)
    b=int((array.shape[0]*16)**(0.5))
    b=2**(int(log(b)/log(2))+1)
    a=int(array.shape[0]*16/b)
    array=array[:a*b//16,:]
    array=np.reshape(array,(a,b))
    im = Image.fromarray(np.uint8(array))
    im.save(IMAGE_DIR + name + '.png', "PNG")
    return im

#Get the list of files

#We will process files one by one.

for counter, name in enumerate(bytes):
    #We only process .bytes files from our folder.
    if '.bytes' != name[-6:]:
        continue
    f=open(BYTES_DIR + name)
    array=[]
    for line in f:
        xx=line.split()
        if len(xx)!=16:
            continue
        array.append([int(i,16) if i!='??' else 0 for i in xx[0:] ])
    plt.imshow(convert_and_save(np.array(array),name))
    del array
    f.close()

print('done')
print('images are saved to ' + IMAGE_DIR)