# calculate the Structural Similarity Index of 2 images
# source: https://ourcodeworld.com/articles/read/991/how-to-calculate-the-structural-similarity-index-ssim-between-two-images-with-python
# pip3 install scikit-image opencv-python imutils

################################################

# Usage:
#
# python3 script.py --input original.png --output modified.png
# Based on: https://github.com/mostafaGwely/Structural-Similarity-Index-SSIM-

# 1. Import the necessary packages
from skimage.metrics import structural_similarity
import argparse
import imutils
import cv2

# 2. Construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-f", "--first", required=True, help="Directory of the image that will be compared")
ap.add_argument("-s", "--second", required=True, help="Directory of the image that will be used to compare")
args = vars(ap.parse_args())

# 3. Load the two input images
imageA = cv2.imread(args["first"])
imageB = cv2.imread(args["second"])

# 3.1 resize the images to 224 * 224
imageA_res = cv2.resize(imageA, (224,224), interpolation = cv2.INTER_AREA)
imageB_res = cv2.resize(imageB, (224,224), interpolation = cv2.INTER_AREA)

# 4. Convert the images to grayscale
grayA = cv2.cvtColor(imageA_res, cv2.COLOR_BGR2GRAY)
grayB = cv2.cvtColor(imageB_res, cv2.COLOR_BGR2GRAY)

# 5. Compute the Structural Similarity Index (SSIM) between the two
#    images, ensuring that the difference image is returned
(score, diff) = structural_similarity(grayA, grayB, full=True)
diff = (diff * 255).astype("uint8")

# 6. You can print only the score if you want
print("SSIM: {}".format(score))