#https://github.com/cocaman/malware-bazaar/blob/master/bazaar_download.py

import argparse
import csv
import requests

csv_path = '../sha256/'
malware_path = '../../DataSet/malware/'

sha256 = []

def read_csv(csvName):
    print('Reading csv...')
    with open(csv_path + csvName, mode='r')as file:
        csvFile = csv.reader(file)
        for line in csvFile:
            sha256.append(line)

def check_sha256(s):
    print('Checking...')
    if s == "":
        return False
    if len(s) != 64:
        print("Please use sha256 value instead of '" + s + "'")
        return False
    return True

def download_file(hash):
    print('Downloading...')
    data = {
        'query': 'get_file',
        'sha256_hash': hash,
    }

    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15, allow_redirects=True)

    if 'file_not_found' in response.text:
        print("Error: file not found")
        return
    else:
        open(malware_path + hash + '.zip', 'wb').write(response.content)
    print("Sample \""+hash+"\" downloaded.")

parser = argparse.ArgumentParser(description='Download a list of malware samples from Malware Bazaar by abuse.ch')
parser.add_argument('-s', '--csv', help='path to csv file with sha256-hashes of malware to be downloaded', required=True)

read_csv(parser.parse_args().csv)
for key in sha256:
    is_valid = check_sha256(key[0])
    if is_valid == True:
        download_file(key[0])
    else:
        print('invalid sample: ' + key[0])

