
# Creates a missing_samples.csv file containing all samples that are missing in SAMPLES_PATH direction

import os
import csv

def read_csv(csv_name):
    sha256 = []
    with open(csv_name, mode='r')as file:
        csvFile = csv.reader(file)
        for line in csvFile:
            sha256.append(line)
    return sha256

def get_hashes(files):
    clean_files = []
    for file in files:
        clean_files.append(file[0:64])
    return clean_files

def write_missing_values(existing_hashes, wanted_hashes):
    # returns all existing files
    #failed_sha256 = filter(lambda key : key[0:64] in wanted_hashes, existing_hashes)
    failed_sha256 = filter(lambda key : key not in existing_hashes, wanted_hashes)
    for file in failed_sha256:
        with open('missing_samples.csv', 'a') as f:
            f.write(f'"{file}"\n')

SAMPLES_PATH = '/home/wj/DataSet/malware'

DOWNLOADED_FILES = os.listdir(SAMPLES_PATH)
DOWNLOADED_HASHES = get_hashes(DOWNLOADED_FILES)

ALL_SAMPLES = read_csv('../sha256/heodo_shas.csv')
all_samples_stripped = []
for sample in ALL_SAMPLES:
    all_samples_stripped.append(sample[0])

write_missing_values(DOWNLOADED_HASHES, all_samples_stripped)

